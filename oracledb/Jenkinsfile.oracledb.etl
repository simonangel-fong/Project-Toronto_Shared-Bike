// Jenkinsfile to build oracledb
pipeline {
    agent any

    environment {

        GITHUB_DIR="/project/github"

        GIT_REPO_URL="https://github.com/simonangel-fong/Project-Toronto_Shared-Bike.git"
        GIT_BRANCH="feature-devops"

        ORACLE_COMPOSE_FILE="/project/github/oracledb/compose.oracledb.prod.yaml"
        ORACLE_CON="oracle19cDB"

        ETL_SINGLE_YEAR_SCRIPT="/project/scripts/etl/single_year_etl_job.sh"
        ETL_MULTIPLE_YEAR_SCRIPT="/project/scripts/etl/multiple_year_etl_job.sh"
        ETL_START_YEAR="2019"
        ETL_END_YEAR="2023"

        MV_REFRESH_SCRIPT='/project/scripts/mv/mv_refresh.sh'
    }

    stages {
        
        stage('Stop Oracle Database') {
            steps {
                echo 'Stopping Oracle database...'

                sh 'docker compose -f ${ORACLE_COMPOSE_FILE} down'
                sh 'docker system prune -f'
            }
        }

        stage('Clone github') {
            steps {
                echo 'Clone code from github...'
                
                sh 'sudo rm -rf ${GITHUB_DIR}'
                sh 'sudo mkdir -pv ${GITHUB_DIR}'
                sh 'sudo chown jenkins:jenkins -Rv ${GITHUB_DIR}'

                // set git
                sh 'git config --global --add safe.directory ${GITHUB_DIR}'
                // clone code
                sh 'git clone --branch ${GIT_BRANCH} ${GIT_REPO_URL} ${GITHUB_DIR}'

                // set sh file permission
                sh 'sudo find ${GITHUB_DIR} -type f -name *.sh -exec chmod -v 755 {} + ;'
            }
        }

        stage('Execute ETL job') {
            steps {

                // enable permission
                sh 'sudo chmod 0777 -R ${DATA_DIR}'

                // sh 'docker exec ${ORACLE_CON} bash ${ETL_SINGLE_YEAR_SCRIPT} ${ETL_START_YEAR}'
                sh 'docker exec ${ORACLE_CON} bash ${ETL_MULTIPLE_YEAR_SCRIPT} ${ETL_START_YEAR} ${ETL_END_YEAR}'
            }
        }

        stage('Refresh MV') {
            steps {
                sh 'docker exec ${ORACLE_CON} bash ${MV_REFRESH_SCRIPT}'
            }
        }
    }
}